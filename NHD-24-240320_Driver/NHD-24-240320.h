/*
 * NHD-24-240320.h
 *	Driver for the New Haven 2.4" LCD
 *	Uses the 8-bit interface on the ST7789 controller
 *  Created on: Jan 24, 2019
 *  Author: Alex
 */

#include "stm32f4xx.h"

#ifndef NHD_24_240320_H_
#define NHD_24_240320_H_

#define LCD_PORT_CS		GPIOA
#define	LCD_PIN_CS		GPIO_PIN_4
#define LCD_PORT_DC		GPIOA
#define LCD_PIN_DC		GPIO_PIN_1
#define LCD_PORT_WR		GPIOA
#define LCD_PIN_WR		GPIO_PIN_6
#define LCD_PORT_RD		GPIOA
#define LCD_PIN_RD		GPIO_PIN_7
#define LCD_PORT_RES	GPIOA
#define LCD_PIN_RES		GPIO_PIN_0

#define LCD_PORT_DATA	GPIOA
#define LCD_PIN_OFFSET	8
#define LCD_PIN_DB8		GPIO_PIN_8
#define LCD_PIN_DB9		GPIO_PIN_9
#define LCD_PIN_DB10	GPIO_PIN_10
#define LCD_PIN_DB11	GPIO_PIN_11
#define LCD_PIN_DB12	GPIO_PIN_12
#define LCD_PIN_DB13	GPIO_PIN_13
#define LCD_PIN_DB14	GPIO_PIN_14
#define LCD_PIN_DB15	GPIO_PIN_15

// LCD Constants
#define LCDWIDTH		240
#define LCDHEIGHT		320
#define LCDMAXWIDTH		(LCDWIDTH-1)
#define LCDMAXHEIGHT	(LCDHEIGHT-1)

// Definitions for LCD cmds
#define SWRESET 	0x01	// Software reset
#define SLPIN		0x10	// Sleep in
#define SLPOUT 		0x11	// Sleep out
#define DISPOFF 	0x28	// Display off
#define DISPON 		0x29	// Display on
#define CASET		0x2A	// Column address set
#define RASET		0x2B	// Row address set
#define RAMWR		0x2C	// RAM write
#define MADCTL		0x36	// Axis control
#define COLMOD		0x3A	// Color mode

// Color constants
#define BLACK		0x0000
#define BLUE		0x001F
#define RED			0xF800
#define GREEN		0x0400
#define LIME		0x07E0
#define CYAN		0x07FF
#define MAGENTA		0xF81F
#define YELLOW		0xFFE0
#define WHITE		0xFFFF

// Orientation constants
#define ORIENTATION_0	0
#define ORIENTATION_90	1
#define ORIENTATION_180	2
#define ORIENTATION_270	3
#define ORIENTATION_MY	4
#define ORIENTATION_MX	5

static const uint8_t FONT_CHARS[96][5] =
{
    {0x00,0x00,0x00,0x00,0x00},// (space)
    {0x00,0x00,0x5F,0x00,0x00},// !
    {0x00,0x07,0x00,0x07,0x00},// "
    {0x14,0x7F,0x14,0x7F,0x14},// #
    {0x24,0x2A,0x7F,0x2A,0x12},// $
    {0x23,0x13,0x08,0x64,0x62},// %
    {0x36,0x49,0x55,0x22,0x50},// &
    {0x00,0x05,0x03,0x00,0x00},// '
    {0x00,0x1C,0x22,0x41,0x00},// (
    {0x00,0x41,0x22,0x1C,0x00},// )
    {0x08,0x2A,0x1C,0x2A,0x08},// *
    {0x08,0x08,0x3E,0x08,0x08},// +
    {0x00,0x50,0x30,0x00,0x00},// ,
    {0x08,0x08,0x08,0x08,0x08},// -
    {0x00,0x60,0x60,0x00,0x00},// .
    {0x20,0x10,0x08,0x04,0x02},// /
    {0x3E,0x51,0x49,0x45,0x3E},// 0
    {0x00,0x42,0x7F,0x40,0x00},// 1
    {0x42,0x61,0x51,0x49,0x46},// 2
    {0x21,0x41,0x45,0x4B,0x31},// 3
    {0x18,0x14,0x12,0x7F,0x10},// 4
    {0x27,0x45,0x45,0x45,0x39},// 5
    {0x3C,0x4A,0x49,0x49,0x30},// 6
    {0x01,0x71,0x09,0x05,0x03},// 7
    {0x36,0x49,0x49,0x49,0x36},// 8
    {0x06,0x49,0x49,0x29,0x1E},// 9
    {0x00,0x36,0x36,0x00,0x00},// :
    {0x00,0x56,0x36,0x00,0x00},// ;
    {0x00,0x08,0x14,0x22,0x41},// <
    {0x14,0x14,0x14,0x14,0x14},// =
    {0x41,0x22,0x14,0x08,0x00},// >
    {0x02,0x01,0x51,0x09,0x06},// ?
    {0x32,0x49,0x79,0x41,0x3E},// @
    {0x7E,0x11,0x11,0x11,0x7E},// A
    {0x7F,0x49,0x49,0x49,0x36},// B
    {0x3E,0x41,0x41,0x41,0x22},// C
    {0x7F,0x41,0x41,0x22,0x1C},// D
    {0x7F,0x49,0x49,0x49,0x41},// E
    {0x7F,0x09,0x09,0x01,0x01},// F
    {0x3E,0x41,0x41,0x51,0x32},// G
    {0x7F,0x08,0x08,0x08,0x7F},// H
    {0x00,0x41,0x7F,0x41,0x00},// I
    {0x20,0x40,0x41,0x3F,0x01},// J
    {0x7F,0x08,0x14,0x22,0x41},// K
    {0x7F,0x40,0x40,0x40,0x40},// L
    {0x7F,0x02,0x04,0x02,0x7F},// M
    {0x7F,0x04,0x08,0x10,0x7F},// N
    {0x3E,0x41,0x41,0x41,0x3E},// O
    {0x7F,0x09,0x09,0x09,0x06},// P
    {0x3E,0x41,0x51,0x21,0x5E},// Q
    {0x7F,0x09,0x19,0x29,0x46},// R
    {0x46,0x49,0x49,0x49,0x31},// S
    {0x01,0x01,0x7F,0x01,0x01},// T
    {0x3F,0x40,0x40,0x40,0x3F},// U
    {0x1F,0x20,0x40,0x20,0x1F},// V
    {0x7F,0x20,0x18,0x20,0x7F},// W
    {0x63,0x14,0x08,0x14,0x63},// X
    {0x03,0x04,0x78,0x04,0x03},// Y
    {0x61,0x51,0x49,0x45,0x43},// Z
    {0x00,0x00,0x7F,0x41,0x41},// [
    {0x02,0x04,0x08,0x10,0x20},// "\"
    {0x41,0x41,0x7F,0x00,0x00},// ]
    {0x04,0x02,0x01,0x02,0x04},// ^
    {0x40,0x40,0x40,0x40,0x40},// _
    {0x00,0x01,0x02,0x04,0x00},// `
    {0x20,0x54,0x54,0x54,0x78},// a
    {0x7F,0x48,0x44,0x44,0x38},// b
    {0x38,0x44,0x44,0x44,0x20},// c
    {0x38,0x44,0x44,0x48,0x7F},// d
    {0x38,0x54,0x54,0x54,0x18},// e
    {0x08,0x7E,0x09,0x01,0x02},// f
    {0x08,0x14,0x54,0x54,0x3C},// g
    {0x7F,0x08,0x04,0x04,0x78},// h
    {0x00,0x44,0x7D,0x40,0x00},// i
    {0x20,0x40,0x44,0x3D,0x00},// j
    {0x00,0x7F,0x10,0x28,0x44},// k
    {0x00,0x41,0x7F,0x40,0x00},// l
    {0x7C,0x04,0x18,0x04,0x78},// m
    {0x7C,0x08,0x04,0x04,0x78},// n
    {0x38,0x44,0x44,0x44,0x38},// o
    {0x7C,0x14,0x14,0x14,0x08},// p
    {0x08,0x14,0x14,0x18,0x7C},// q
    {0x7C,0x08,0x04,0x04,0x08},// r
    {0x48,0x54,0x54,0x54,0x20},// s
    {0x04,0x3F,0x44,0x40,0x20},// t
    {0x3C,0x40,0x40,0x20,0x7C},// u
    {0x1C,0x20,0x40,0x20,0x1C},// v
    {0x3C,0x40,0x30,0x40,0x3C},// w
    {0x44,0x28,0x10,0x28,0x44},// x
    {0x0C,0x50,0x50,0x50,0x3C},// y
    {0x44,0x64,0x54,0x4C,0x44},// z
    {0x00,0x08,0x36,0x41,0x00},// {
    {0x00,0x00,0x7F,0x00,0x00},// |
    {0x00,0x41,0x36,0x08,0x00},// }
    {0x08,0x08,0x2A,0x1C,0x08},// ->
    {0x08,0x1C,0x2A,0x08,0x08},// <-
};

void TFT_Config_Pins();
void TFT_24_7789_Write_Cmd(const uint8_t command);
void TFT_24_7789_Write_Data(const uint8_t data);

void TFT_SetAddrWindow(const uint16_t x0, const uint16_t y0, const uint16_t x1, const uint16_t y1);

void TFT_Init(void);
void TFT_Clear(uint16_t color);

uint16_t TFT_RGBto16Bit(uint8_t r, uint8_t g, uint8_t b);

// Drawing functions
void TFT_DrawPixel(uint16_t x, uint16_t y, uint16_t color);
void TFT_FillRect(uint16_t x0, uint16_t y0, uint16_t x1, uint16_t y2, uint16_t color);
void TFT_DrawHLine(uint16_t x0, uint16_t x1, uint16_t y, uint16_t color);
void TFT_DrawVLine(uint16_t x, uint16_t y0, uint16_t y1, uint16_t color);
void TFT_DrawLine(uint16_t x0, uint16_t y0, uint16_t x1, uint16_t y1, uint16_t color);
void TFT_LCD_putCh(char ch, uint16_t x, uint16_t y, uint16_t color, uint16_t bgcolor);
void TFT_DrawString(const char *str, uint16_t x, uint16_t y, uint16_t color);
void TFT_DrawInt(uint16_t num, uint8_t numdigits, uint16_t x, uint16_t y, uint16_t color);
void TFT_DrawFloat(double f, uint16_t x, uint16_t y, uint16_t color);

void TFT_SetOrientation(uint8_t degrees);

#endif /* NHD_24_240320_H_ */
